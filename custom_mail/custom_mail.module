<?php

use Drupal\Core\Entity\EntityInterface;

/* 
* implement hook_mail() 
*/

function custom_mail_mail($key, &$message, $params)
{
    $options = array(
        'langcode' => $message['langcode'],
    );

    switch ($key) {
        case 'Username_Change_status':
            $message['header'] = ['Content-Type' => 'text/html'];
            $message['subject'] = 'RE: Username has changed';
            $body_data = array(
                '#theme' => 'custom_mail_formatter',
                /**Greetings line */
                '#key1' => $params['message'][0]."\n",
                /**Username change line */
                '#key2' => "\t".$params['message'][1],
                /**Node reference link line */
                '#key3' => "\t".$params['message'][2],
                /**Thanking You, */
                '#key4' => "\n".'Thank You,',
                /**Your Name. */
                '#key5' => 'XXXXX.',
                /*****Dies ist eine automatisch generierte E-Mail. Bitte antworten Sie nicht auf diese E-Mail.*****/
                '#key6' => 'This is an autogenerated E-mail. Please donot reply to this mail.'
            );
            $message['body'][] = \Drupal::service('renderer')->render($body_data);
            break;
    }

}
/* 
* implement hook_ENTITY_TYPE_update() ->here Entity Type is node 
*/
function custom_mail_node_update(EntityInterface $entity)
{
    /* 
    * points to be remembered:  Everytime when username is changed new version should be created then only mail can be sent.
    */

    /*Get node id of the entity*/
    $node = \Drupal::routeMatch()->getParameter('node');
    $nid = $node->id();

    /*Get latest version ID(vid) for nid*/
    $query = \Drupal::database();
    $res_vid = $query->select('node_field_revision', 'e')->condition('e.nid', $nid, '=');
    $res_vid->addExpression('MAX(vid)');
    $res_vid_max = $res_vid->execute()->fetchfield(); //created version ID

    $res_vid_previous_vid = $res_vid_max - 1; //previous version ID

    // \Drupal::messenger()->addMessage('current version: '.$res_vid_max);
    // \Drupal::messenger()->addMessage('previous version: '.$res_vid_previous_vid);

    /*new version author uid(newly assigned owner)*/
    $new_user_uid = $query->select('node_field_revision', 'e')->fields('e', ['uid'])->condition('e.nid', $nid, '=')->condition('e.vid', $res_vid_max, '=')->execute()->fetchAll(\PDO::FETCH_OBJ);
    /*current version author uid(current owner)*/
    $current_user_uid = $query->select('node_field_revision', 'e')->fields('e', ['uid'])->condition('e.nid', $nid, '=')->condition('e.vid', $res_vid_previous_vid, '=')->execute()->fetchAll(\PDO::FETCH_OBJ);

    // \Drupal::messenger()->addMessage($new_user_vid_uid[0]->uid.'........................'.$current_user_vid_uid[0]->uid);

    if ($new_user_uid[0]->uid !== $current_user_uid[0]->uid) {

        // \Drupal::messenger()->addMessage('Users are not same. Please send mail');
        $new_user_uid = $new_user_uid[0]->uid;

        /*Accessing latest UserID by accessing VID(Verion Id) with comparing to node ID*/
        // $res_uid = $query->select('node_field_data', 'e')->fields('e', ['nid', 'vid', 'uid'])->condition('e.nid', $nid, '=')->execute()->fetchAll(\PDO::FETCH_OBJ);
        // $uid = $res_uid[0]->uid;

        /*Accessing user details by using uid value*/
        $new_user = $query->select('users_field_data', 'u')->fields('u', ['uid', 'name', 'mail'])->condition('u.uid', $new_user_uid, '=')->execute()->fetchAll(\PDO::FETCH_OBJ);

        /*mailmanager::mail() parameters list*/
        $mailManager = \Drupal::service('plugin.manager.mail');
        $module = 'custom_mail';
        $key = 'Username_Change_status';
        $from = 'no-reply@gmail.com';
        $to = $new_user[0]->mail; //accessing current author name of the content
        $body_line_1 = 'Hello ' . $new_user[0]->name . ',';
        $body_line_2 = 'Username has been changed to: ' . $new_user[0]->name;

        /*Node Link Generator*/
        $options = ['absolute' => TRUE];
        $view_link = $node->toUrl('canonical', $options)->toString();

        $body_line_3 = 'For your referenece: '. $view_link;

        $params['node_title'] = $entity->label();
        $langcode = \Drupal::currentUser()->getPreferredLangcode();
        $send = true;

        $params['message'] = array($body_line_1, $body_line_2, $body_line_3);
        /*send mail here*/
        $result = $mailManager->mail($module, $key, $to, $langcode, $params, $from, $send);

        // /*check whether mail is send or not*/
        // if ($result['result'] !== true) {
        //     \Drupal::messenger()->addError('There was a problem sending your message');
        // } else {
        //     \Drupal::messenger()->addMessage('Your message has been sent.');
        // }

        
    }
}

/* 
* implement hook_theme()
*/
function custom_mail_theme($params)
{
    return [
        'custom_mail_formatter' => array(
            'template' => 'custom_mail_formatter',  // TWIG File
            'variables' => ['key1' => NULL, 'key2' => NULL, 'key3' => NULL, 'key4' => NULL,'key5'=>NULL,'key6'=>NULL]
        ),
    ];
}